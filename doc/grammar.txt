OPEN_PAREN ::= '('
CLOSE_PAREN ::= ')'
OPEN_CURLY ::= '{'
CLOSE_CURLY ::= '}'
DOUBLE_QUOTES ::= "

DIGIT ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

NUMBER ::= DIGIT NUMBER | DIGIT

LETTER ::=  'a' | 'b'| 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i'
       | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p'| 'q' | 'r'
       | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z'

STRING ::= LETTER STRING | LETTER

IDENTIFIER ::= STRING

DATA_TYPE ::= NUM_DATA_TYPE
              | STRING_DATA_TYPE
              | STACK_DATA_TYPE
              | QUEUE_DATA_TYPE

NUM_DATA_TYPE ::= 'num'

STRING_DATA_TYPE ::= 'string'

BOOLEAN_DATA_TYPE ::= 'boolean'

STACK_DATA_TYPE ::= 'stack'

QUEUE_DATA_TYPE ::= 'queue'

LIST_DATA_TYPE ::= 'list'

ASSIGNMENT_OPERATOR ::= '='

BOOLEAN_OPERATOR ::= 'and' | 'or'

BOOLEAN_VALUE ::= 'true' | 'false'

COMPARISON_OPERATOR ::= '>' | '<' | '==' | '<=' | '>=' | '!='

PROGRAM ::= BLOCK

BLOCK ::= COMMAND

COMMAND ::= STATEMENT COMMAND | Null

STATEMENT ::= VARIABLE_DECLARATION
              | VARIABLE_ASSIGNMENT
              | IF_ELSE_DECLARATION
              | WHILE_LOOP
              | FOR_LOOP
              | PRINT
              | STACK_OPERATIONS
              | QUEUE_OPERATIONS
              | LIST_OPERATIONS
              | METHOD

VARIABLE_DECLARATION ::= DATA_TYPE IDENTIFIER
              | NUM_DATA_TYPE NUM_ASSIGNMENT_STATEMENT
              | STRING_DATA_TYPE STRING_ASSIGNMENT_STATEMENT
              | BOOLEAN_DATA_TYPE BOOLEAN_ASSIGNMENT_STATEMENT
              | STACK_DATA_TYPE STACK_ASSIGNMENT_STATEMENT
              | QUEUE_DATA_TYPE QUEUE_ASSIGNMENT_STATEMENT
              | LIST_DATA_TYPE LIST_ASSIGNMENT_STATEMENT

NUM_ASSIGNMENT_STATEMENT ::= IDENTIFIER ASSIGNMENT_OPERATOR EXPRESSION
              | IDENTIFIER ASSIGNMENT_OPERATOR TERNARY_STATEMENT

TERNARY_STATEMENT ::= BOOLEAN_EXPRESSION '?' EXPRESSION ::= EXPRESSION


STRING_ASSIGNMENT_STATEMENT ::= IDENTIFIER ASSIGNMENT_OPERATOR STRING
              | IDENTIFIER ASSIGNMENT_OPERATOR STRING '+' STRING

BOOLEAN_ASSIGNMENT_STATEMENT ::= IDENTIFIER ASSIGNMENT_OPERATOR BOOLEAN_EXPRESSION

STACK_ASSIGNMENT_STATEMENT ::= IDENTIFIER ASSIGNMENT_OPERATOR LIST

QUEUE_ASSIGNMENT_STATEMENT ::= IDENTIFIER ASSIGNMENT_OPERATOR LIST

LIST_ASSIGNMENT_STATEMENT ::= IDENTIFIER ASSIGNMENT_OPERATOR LIST


VARIABLE_ASSIGNMENT ::= NUM_ASSIGNMENT_STATEMENT
              | STRING_ASSIGNMENT_STATEMENT
              | BOOLEAN_ASSIGNMENT_STATEMENT
              | STACK_ASSIGNMENT_STATEMENT
              | QUEUE_ASSIGNMENT_STATEMENT
              | LIST_ASSIGNMENT_STATEMENT

IF_STATEMENT ::= 'if' OPEN_PAREN BOOLEAN_EXPRESSION CLOSE_PAREN OPEN_CURLY COMMAND CLOSE_CURLY , ELIF_STATEMENT

ELIF_STATEMENT ::=  'elif' OPEN_PAREN BOOLEAN_EXPRESSION CLOSE_PAREN OPEN_CURLY COMMAND CLOSE_CURLY, ELIF_STATEMENT | ELSE_STATEMENT | Null

ELSE_STATEMENT ::= 'else' OPEN_CURLY COMMAND CLOSE_CURLY | Null

BOOLEAN_EXPRESSION ::= EXPRESSION COMPARISON_OPERATOR EXPRESSION
			| BOOLEAN_EXPRESSION BOOLEAN_OPERATOR BOOLEAN_EXPRESSION
			| 'not' BOOLEAN_EXPRESSION
			| BOOLEAN_VALUE
                     | OPEN_PAREN BOOLEAN_EXPRESSION CLOSE_PAREN

EXPRESSION_OPERATOR ::= '+' | '-' | '*' | '/'

EXPRESSION ::= EXPRESSION EXPRESSION_OPERATOR EXPRESSION
              | IDENTIFIER ASSIGNMENT_OPERATOR EXPRESSION
              | OPEN_PAREN EXPRESSION CLOSE_PAREN
              | NUMBER
              | IDENTIFIER
              | STACK_PRINT
              | QUEUE_PRINT

WHILE_LOOP ::= 'while' OPEN_PAREN BOOLEAN_EXPRESSION CLOSE_PAREN OPEN_CURLY COMMAND CLOSE_CURLY

FOR_LOOP ::= 'for' IDENTIFIER 'in' 'range' OPEN_PAREN NUMBER ',' NUMBER CLOSE_PAREN OPEN_CURLY COMMAND CLOSE_CURLY

FOR_LOOP ::= 'for' OPEN_PAREN IDENTIFIER ASSIGNMENT_OPERATOR EXPRESSION ';' IDENTIFIER COMPARISON_OPERATOR EXPRESSION ';' IDENTIFIER = EXPRESSION CLOSE_PAREN OPEN_CURLY COMMAND CLOSE_CURLY

PRINT ::= 'print' OPEN_PAREN PRINT_STATEMENT CLOSE_PAREN

PRINT_STATEMENT_LIST ::= Null
              | PRINT_STATEMENT

PRINT_STATEMENT ::= IDENTIFIER PRINT_STATEMENT_LIST
              | STRING PRINT_STATEMENT_LIST
              | EXPRESSION PRINT_STATEMENT_LIST
              | STACK_PRINT
              | QUEUE_PRINT


STACK_OPERATIONS ::= STACK_PRINT
              | IDENTIFIER '.' 'push' OPEN_PAREN EXPRESSION CLOSE_PAREN

STACK_PRINT ::= IDENTIFIER '.' 'pop' OPEN_PAREN CLOSE_PAREN
              | IDENTIFIER '.' 'top' OPEN_PAREN CLOSE_PAREN

QUEUE_OPERATIONS ::= QUEUE_PRINT
              | IDENTIFIER '.' 'push' OPEN_PAREN EXPRESSION CLOSE_PAREN

QUEUE_PRINT ::= IDENTIFIER '.' 'poll' OPEN_PAREN CLOSE_PAREN
              | IDENTIFIER '.' 'head' OPEN_PAREN CLOSE_PAREN

LIST_OPERATIONS ::= IDENTIFIER '.' 'add' OPEN_PAREN EXPRESSION CLOSE_PAREN
              | IDENTIFIER '.' 'add' OPEN_PAREN EXPRESSION [,] EXPRESSION CLOSE_PAREN
              | IDENTIFIER '.' 'remove' OPEN_PAREN EXPRESSION CLOSE_PAREN
              | IDENTIFIER '.' 'get' OPEN_PAREN EXPRESSION CLOSE_PAREN

METHOD ::= METHOD_DECLARATION | METHOD_CALL

METHOD_DECLARATION ::= 'def' IDENTIFIER OPEN_PAREN PARAMETER_LIST CLOSE_PAREN OPEN_CURLY METHOD_BODY CLOSE_CURLY

METHOD_CALL ::= IDENTIFIER OPEN_PAREN PARAMETER_LIST CLOSE_PAREN

METHOD_BODY ::- COMMAND

PARAMETER_LIST ::- IDENTIFIER ',' PARAMETER_LIST | Null
